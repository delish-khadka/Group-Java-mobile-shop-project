/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppliancesInfo;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Delish Khadka
 */
public class AppliancesInfo extends javax.swing.JFrame {

    private ArrayList<PhoneDetails> list = new ArrayList();
    private String modelNumber;
    private String accessoryName;
    private double price;
    private String category;
    private String quality;
    private String recommendation;

    /**
     * Creates new form AppliancesInfo
     */
    
    public AppliancesInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetails = new javax.swing.JTable();
        searchPanel = new javax.swing.JPanel();
        searchCategoryBtn = new javax.swing.JButton();
        txtSearchByPrice = new javax.swing.JTextField();
        searchCategoryCmbBox = new javax.swing.JComboBox<>();
        searchBtn = new javax.swing.JButton();
        inputPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtAccName = new javax.swing.JTextField();
        txtModelNum = new javax.swing.JTextField();
        medRadioBtn = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        highRadioBtn = new javax.swing.JRadioButton();
        txtPrice = new javax.swing.JTextField();
        comboCategory = new javax.swing.JComboBox<>();
        compaCheckBox = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        lowRadioBtn = new javax.swing.JRadioButton();
        commuCheckBox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        norecoCheckBox = new javax.swing.JCheckBox();
        buttonPanel = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuOpen = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuHelp = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablePanel.setBackground(new java.awt.Color(204, 255, 204));
        tablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Smartphone Accessory Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Black", 1, 24))); // NOI18N

        tblDetails.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblDetails.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        tblDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Model Number", "Accessory Name", "Category", "Recommendation", "Quality", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDetails.setGridColor(new java.awt.Color(204, 204, 0));
        tblDetails.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblDetails);

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        searchPanel.setBackground(new java.awt.Color(153, 255, 255));
        searchPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        searchCategoryBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        searchCategoryBtn.setText("Search by category");
        searchCategoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCategoryBtnActionPerformed(evt);
            }
        });

        txtSearchByPrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearchByPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchByPriceActionPerformed(evt);
            }
        });
        txtSearchByPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchByPriceKeyTyped(evt);
            }
        });

        searchCategoryCmbBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not selected", "Apple", "Huawei", "Lenovo", "Samsung", "Xiaomi" }));

        searchBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        searchBtn.setText("Search by price");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(txtSearchByPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(searchCategoryCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchCategoryBtn)))
                .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchByPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addGap(9, 9, 9)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchCategoryBtn)
                    .addComponent(searchCategoryCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        inputPanel.setBackground(new java.awt.Color(204, 255, 204));
        inputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Input Form", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Accessory Name:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("Price:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setText("Quality:");

        txtAccName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAccNameActionPerformed(evt);
            }
        });

        txtModelNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelNumActionPerformed(evt);
            }
        });
        txtModelNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtModelNumKeyTyped(evt);
            }
        });

        buttonGroup1.add(medRadioBtn);
        medRadioBtn.setText("Medium");
        medRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medRadioBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Model Number:");

        buttonGroup1.add(highRadioBtn);
        highRadioBtn.setText("High");
        highRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highRadioBtnActionPerformed(evt);
            }
        });

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPriceKeyTyped(evt);
            }
        });

        comboCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "_Select the Category_", "Apple", "Huawei", "Lenovo", "Samsung", "Xiaomi" }));
        comboCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCategoryActionPerformed(evt);
            }
        });

        buttonGroup2.add(compaCheckBox);
        compaCheckBox.setText("By company");
        compaCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compaCheckBoxActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Recommendation:");

        buttonGroup1.add(lowRadioBtn);
        lowRadioBtn.setSelected(true);
        lowRadioBtn.setText("Low");
        lowRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowRadioBtnActionPerformed(evt);
            }
        });

        buttonGroup2.add(commuCheckBox);
        commuCheckBox.setText("By community");
        commuCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commuCheckBoxActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Category:");

        buttonGroup2.add(norecoCheckBox);
        norecoCheckBox.setSelected(true);
        norecoCheckBox.setText("No recommendation");
        norecoCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                norecoCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(45, 45, 45))
                                .addGroup(inputPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(61, 61, 61)))
                            .addGroup(inputPanelLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(41, 41, 41)))
                        .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAccName, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(inputPanelLayout.createSequentialGroup()
                                .addComponent(norecoCheckBox)
                                .addGap(27, 27, 27)
                                .addComponent(compaCheckBox)
                                .addGap(26, 26, 26)
                                .addComponent(commuCheckBox))
                            .addComponent(comboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(120, 120, 120)
                        .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inputPanelLayout.createSequentialGroup()
                                .addComponent(lowRadioBtn)
                                .addGap(44, 44, 44)
                                .addComponent(medRadioBtn)
                                .addGap(42, 42, 42)
                                .addComponent(highRadioBtn))
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1))
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addComponent(txtModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtAccName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(norecoCheckBox)
                    .addComponent(compaCheckBox)
                    .addComponent(commuCheckBox))
                .addGap(16, 16, 16)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medRadioBtn)
                    .addComponent(highRadioBtn)
                    .addComponent(lowRadioBtn)
                    .addComponent(jLabel7))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        buttonPanel.setBackground(new java.awt.Color(153, 255, 255));
        buttonPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buttons", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        addBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        clearBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        exitBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(clearBtn))
                .addGap(41, 41, 41)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(exitBtn))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuOpen.setText("Open");
        jMenuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuOpenActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuOpen);
        jMenu1.add(jSeparator1);

        jMenuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuExit.setText("Exit");
        jMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenu2.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N

        jMenuHelp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuHelp.setText("Help");
        jMenuHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHelpActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuHelp);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(74, 74, 74))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtModelNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelNumActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void txtAccNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAccNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAccNameActionPerformed

    /*
    This method depends on the PhoneDetails class
    This method is used when add button is pressed after inputting values in text field and selecting other items
    This table adds the data entered and show it in the JTable form
    In case of wrong input by the user, error message is popped with proper messages to fix the error
    */
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        try
		{
 			modelNumber = txtModelNum.getText().trim();
 			accessoryName = txtAccName.getText().trim();
 			category = comboCategory.getSelectedItem().toString(); 
 
 			if((modelNumber.isEmpty() || accessoryName.isEmpty()))
                        {
                            JOptionPane.showMessageDialog(rootPane, "Please enter details in all fieds!", " Invalid", JOptionPane.ERROR_MESSAGE);
                            
                        }
                        else if(comboCategory.getSelectedIndex() == 0){
                               JOptionPane.showMessageDialog(rootPane, "Please select a category!","Error",2);
                             return;
                            }

 			else{
                            price = Double.parseDouble(txtPrice.getText().trim());
                            if(price<=0){
                                JOptionPane.showMessageDialog(rootPane, "Price cannot be zero", " Invalid", JOptionPane.ERROR_MESSAGE);
                                return;
                            }
                            if(lowRadioBtn.isSelected())
                            {
                                quality=lowRadioBtn.getText();
                            }
                            else if(medRadioBtn.isSelected())
                            {
                                quality=medRadioBtn.getText();
                            }
                            else
                            {
                                quality=highRadioBtn.getText();
                            }
                            
                            if(norecoCheckBox.isSelected())
                            {
                                recommendation = "no recommendation";
                            }
                            else if(compaCheckBox.isSelected())
                            {
                                recommendation = "By company";
                            }
                            else if(commuCheckBox.isSelected())
                            { 
                                recommendation = "By community";
                            }
                            if(validation())
                            {
                                DefaultTableModel model = (DefaultTableModel) tblDetails.getModel();
                                model.addRow(new Object[] { modelNumber, accessoryName, category, recommendation, quality, price});
                                PhoneDetails phoneDetails = new PhoneDetails( modelNumber, accessoryName, category, recommendation, quality, price);//creating object of PhoneDetails class
                                list.add(phoneDetails);
                            }
                        } 
 		}
		catch(NumberFormatException exception){
			JOptionPane.showMessageDialog(rootPane, "Please enter value in price text field!","Invalid Information",JOptionPane.ERROR_MESSAGE);
 		}       
    }//GEN-LAST:event_addBtnActionPerformed

    /*
    This method is used to validate user inputs
    In case of duplicate input in model number and accessories name, error message is shown to the user
    If user input is validated, returns true , returns false if the data is same on two entries
    */
    public boolean validation(){
	if(list.isEmpty()){
		return true;
	} 
	for(PhoneDetails ArrayList:list)
	{
	if(ArrayList.getModelNumber().equals(modelNumber))
	{
	JOptionPane.showMessageDialog(rootPane, "The Model Number is already used in the table!", "Refill information!", JOptionPane.ERROR_MESSAGE);
		return false;
	}
	else if(!ArrayList.getQuality().equals(quality)){
	 
		if(ArrayList.getAccessoryName().toLowerCase().equals(accessoryName.toLowerCase())){
		return true;
		}
	}

	else if(ArrayList.getAccessoryName().toLowerCase().equals(accessoryName.toLowerCase())){
		JOptionPane.showMessageDialog(rootPane, "Accessory name cannot be same of two entries!", "Refill information!", JOptionPane.ERROR_MESSAGE);
		return false;
	}
	}
	 return true;
	}

    /*
    This button is used for functioning exit button
    Pop up is created so that user can choose to exit, in case of mistakenly exit
    */
    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        //System.exit(0);
        int confirmed = JOptionPane.showConfirmDialog(null, "Are you sure, you want to Exit Program?","EXIT",JOptionPane.YES_NO_OPTION);
        if(confirmed == JOptionPane.YES_OPTION)
        {
            dispose();
        }
    }//GEN-LAST:event_exitBtnActionPerformed

    private void comboCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCategoryActionPerformed

    /*
    This button clears all the textfields in the GUI and resets the value in input form to default
    */
    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        txtModelNum.setText("");
        txtAccName.setText("");
        txtPrice.setText("");
        comboCategory.setSelectedIndex(0);
        norecoCheckBox.setSelected(true);
        lowRadioBtn.setSelected(true);
        JOptionPane.showMessageDialog(rootPane, "Cleared!", "Info!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_clearBtnActionPerformed

    /*
    This method is used to search accessories according to category from combobox
    
    */
    private void searchCategoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCategoryBtnActionPerformed
        // TODO add your handling code here:
        if(list.isEmpty()){
	 		JOptionPane.showMessageDialog(rootPane,"No items found for searching!","Message",JOptionPane.INFORMATION_MESSAGE);
	 	return;
	 	}
	 	String searchByCategory = searchCategoryCmbBox.getSelectedItem().toString();
	 	String accessoryName = "";
	 	String details = "";
	 	int count = 0;
	 	for(PhoneDetails phoneDetails:list){
	 	if(phoneDetails.getCategory().equals(searchByCategory)){
	 		count++;
	 		accessoryName += count+ ". The Accessory Name is "+phoneDetails.getAccessoryName()+".\n";
	 		details += "The Model Number is "+phoneDetails.getModelNumber()+",\n"
	 		+ "The Accessory name is "+phoneDetails.getAccessoryName()+",\n"
	 		+ "The Category is "+phoneDetails.getCategory()+",\n"
	 		+ "The Recommendation is "+phoneDetails.getRecommendation()+",\n"
	 		+ "The Quality is "+phoneDetails.getQuality()+" and\n"
	 		+ "The Price is " +phoneDetails.getPrice() +" \n \n";
	 		}
		}
	 	if(count == 0){
			JOptionPane.showMessageDialog(rootPane,"Accessories with the "+searchByCategory+" category is not found","Error",JOptionPane.ERROR_MESSAGE);
		} else if(count==1){
	 		JOptionPane.showMessageDialog(rootPane,"One accessory with the category "+category+"found"+"\n"+details,"Message",JOptionPane.INFORMATION_MESSAGE);
	 	}
	 	else{
	 		int input = JOptionPane.showConfirmDialog(rootPane,"There are "+count+" accessories found: \n"
	 		+accessoryName
	 		+ "Do you want to view the details of the Accessories found?","MESSAGE",JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
	 		if(input == 0){//yes
	 			JOptionPane.showMessageDialog(rootPane,details,"Accessory Found",JOptionPane.INFORMATION_MESSAGE);
	 		}
	 	}
       
    }//GEN-LAST:event_searchCategoryBtnActionPerformed

    private void txtPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyTyped
        // TODO add your handling code here:
        char key = evt.getKeyChar();
        if (!((key >= '0') && (key<='9') || key==KeyEvent.VK_BACK_SPACE || key==KeyEvent.VK_DELETE)) {
            evt.consume();
        }

    }//GEN-LAST:event_txtPriceKeyTyped

    private void txtModelNumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtModelNumKeyTyped
        // TODO add your handling code here:
        char key = evt.getKeyChar();
        if (!((key >= '0') && (key<='9') || key==KeyEvent.VK_BACK_SPACE || key==KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtModelNumKeyTyped

    private void txtSearchByPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchByPriceKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchByPriceKeyTyped

    private void lowRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowRadioBtnActionPerformed
        // TODO add your handling code here:
   
    }//GEN-LAST:event_lowRadioBtnActionPerformed

    private void medRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medRadioBtnActionPerformed
        // TODO add your handling code here:
    
    }//GEN-LAST:event_medRadioBtnActionPerformed

    private void highRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highRadioBtnActionPerformed
        // TODO add your handling code here:                    
      
    }//GEN-LAST:event_highRadioBtnActionPerformed

    private void norecoCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_norecoCheckBoxActionPerformed
        // TODO add your handling code here:
    
    }//GEN-LAST:event_norecoCheckBoxActionPerformed

    private void compaCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compaCheckBoxActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_compaCheckBoxActionPerformed

    private void commuCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commuCheckBoxActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_commuCheckBoxActionPerformed

    /*
    This button deletes the selected row in the table
    */
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try{DefaultTableModel model = (DefaultTableModel) tblDetails.getModel();
	 	int selectedRowIndex = tblDetails.getSelectedRow();
	 	if(model.getRowCount()==0){
	 		JOptionPane.showMessageDialog(rootPane,"No rows found for deletion","ERROR!",JOptionPane.ERROR_MESSAGE);
	 	}else if(selectedRowIndex == -1){
	 		JOptionPane.showMessageDialog(rootPane,"Please select a row to delete","ERROR!",JOptionPane.ERROR_MESSAGE);
	 	}
	 	else{
	 		model.removeRow(selectedRowIndex);
	 		list.remove(selectedRowIndex);
                }
        }
                catch(Exception e)
                {JOptionPane.showMessageDialog(rootPane,"Row deleted successfully","Message!",JOptionPane.INFORMATION_MESSAGE);
                }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void jMenuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuOpenActionPerformed
        // TODO add your handling code here:
        try{
            File file = new File("Table.xlsx");
            if(file.exists()){
                if(Desktop.isDesktopSupported()){
                    Desktop.getDesktop().open(file);
                }
            }else{
                    JOptionPane.showMessageDialog(rootPane, "File could not be found", "Error", JOptionPane.ERROR_MESSAGE);
            }
            }catch(Exception e){
                    e.printStackTrace();
            }
            
    }//GEN-LAST:event_jMenuOpenActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuExitActionPerformed
        // TODO add your handling code here:
        int confirmed = JOptionPane.showConfirmDialog(null, "Are you sure, you want to Exit Program?","EXIT",JOptionPane.YES_NO_OPTION);
        if(confirmed == JOptionPane.YES_OPTION)
        {
            dispose();
        }

    }//GEN-LAST:event_jMenuExitActionPerformed

    private void jMenuHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHelpActionPerformed
        // TODO add your handling code here:
        try{
            File help = new File("ReadMe.txt");
            if(help.exists()){
                if(Desktop.isDesktopSupported()){
                    Desktop.getDesktop().open(help);
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "File could not be Found", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }catch(IOException e){
                
        }
    }//GEN-LAST:event_jMenuHelpActionPerformed

    /*
    This method re-arranges the sorted list as default
    This method is called in search by price method
    */
    private void toList(){
 	list.clear();
 	DefaultTableModel model = (DefaultTableModel) tblDetails.getModel();
 	for(int i=0; i<model.getRowCount(); i++){
            String numList = model.getValueAt(i, 0).toString();
            String nameList = model.getValueAt(i, 1).toString();
            String categoryList = model.getValueAt(i, 2).toString();
            String recommendationList = model.getValueAt(i, 3).toString();
            String qualityList = model.getValueAt(i, 4).toString();
            double priceList = Double.parseDouble(model.getValueAt(i, 5).toString());
            list.add(new PhoneDetails(numList, nameList, categoryList, recommendationList, qualityList, priceList));
 	} 
    }

    /*
    This method finds the index of list where the value is located
    start is the index from where the search begins
    end is the index upto which the search is done
    value is the price to perform search 
    */
    private int binarySearch(ArrayList<PhoneDetails> list, int start, int end, double value){
 		if(start<=end){
 		int mid = (end + start)/2;
 			if(list.get(mid).getPrice()== value){
				return mid;
 			}
 			else if(list.get(mid).getPrice()< value){
 				return binarySearch(list, mid+1, end, value);
 			}else{
 				return binarySearch(list,start, mid-1, value);
 			} 
 			}else{
 				return -1;//returns -1 if the value is not found
			}
    }
    /*
    This method sorts unsorted list
    */
    private void sort(ArrayList<PhoneDetails> list)
    {
	for(int i=0;i<list.size()-1;i++){
            int minPosition = minimumPosition(list,i);//calling minimumPosition method to find smallest value in list
            PhoneDetails phoneDetails = list.get(i);
            list.set(i,list.get(minPosition));
            list.set(minPosition, phoneDetails);
        } 
    }

    /*
    This method compares the value of the index with other indexes
    */
    private int minimumPosition(ArrayList<PhoneDetails> list,int x){//x = index of the list
	int minPosition= x;
        for(int i = x+1;i<list.size();i++)
	{
            if(list.get(i).getPrice() < list.get(minPosition).getPrice()){
            minPosition = i;
            }
	}
	return minPosition;
    }
        
    /*
    This method searches the accessories according to price
    */
    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        if(txtSearchByPrice.getText().equals("")){
	 	JOptionPane.showMessageDialog(rootPane,"Please insert price in the text field to search.","Search Error",JOptionPane.INFORMATION_MESSAGE);
	 	return;
	 }
	 else if(list.isEmpty()){
	 	JOptionPane.showMessageDialog(rootPane,"There are no items found for searching!","Search Error",JOptionPane.INFORMATION_MESSAGE);
	 	return;
	 } 
	 try
	 {
	 	sort(list); //sorting list by sort method
	 	double searchByPrice = Double.parseDouble(txtSearchByPrice.getText().trim()); 
	 	int index = binarySearch(list,0,list.size()-1,searchByPrice); 
	 	if(index==-1)
	 	{
	 		JOptionPane.showMessageDialog(rootPane,"Accessory of price "+searchByPrice+" is not found.","Warning",JOptionPane.INFORMATION_MESSAGE);
		}
	 	else
	 	{
	 		JOptionPane.showMessageDialog(rootPane,"The Model Number is "+list.get(index).getModelNumber()+",\n"
	 		+ "The accessory name is "+list.get(index).getAccessoryName()+",\n"
	 		+ "The Category is "+list.get(index).getCategory()+",\n"
                        + "The Recommendation is "+list.get(index).getRecommendation()+",\n"
	 		+ "The quality is "+list.get(index).getQuality()+",\n"
	 		+ "The Price is " +searchByPrice +" \n","Accessory Found",JOptionPane.INFORMATION_MESSAGE);
	 		//txtSearchByPrice.setText("");
	 	}
	 	toList();//calling toList method
	 }
	 catch(NumberFormatException nfe)
	 {
	 	JOptionPane.showMessageDialog(rootPane,"Please input price in number in the text field.","Error",JOptionPane.ERROR_MESSAGE);
	 } 
    }//GEN-LAST:event_searchBtnActionPerformed

    private void txtSearchByPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchByPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchByPriceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    javax.swing.UIManager.put("control",new java.awt.Color(204,255,204));
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppliancesInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppliancesInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton btnDelete;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton clearBtn;
    private javax.swing.JComboBox<String> comboCategory;
    private javax.swing.JCheckBox commuCheckBox;
    private javax.swing.JCheckBox compaCheckBox;
    private javax.swing.JButton exitBtn;
    private javax.swing.JRadioButton highRadioBtn;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuExit;
    private javax.swing.JMenuItem jMenuHelp;
    private javax.swing.JMenuItem jMenuOpen;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JRadioButton lowRadioBtn;
    private javax.swing.JRadioButton medRadioBtn;
    private javax.swing.JCheckBox norecoCheckBox;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton searchCategoryBtn;
    private javax.swing.JComboBox<String> searchCategoryCmbBox;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JTable tblDetails;
    private javax.swing.JTextField txtAccName;
    private javax.swing.JTextField txtModelNum;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSearchByPrice;
    // End of variables declaration//GEN-END:variables

    private void clear() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
